// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Organisation {
  id           Int           @id @default(autoincrement())
  name         String
  departments  Department[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Department {
  id             Int         @id @default(autoincrement())
  name           String
  organisation   Organisation @relation(fields: [organisationId], references: [id])
  organisationId Int
  teams          Team[]
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

model Team {
  id           Int         @id @default(autoincrement())
  name         String
  department   Department  @relation(fields: [departmentId], references: [id])
  departmentId Int
  users        User[]
  okrs         OKR[]
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      String
  team      Team?    @relation(fields: [teamId], references: [id])
  teamId    Int?
  okrs      OKR[]    @relation("AssignedOKRs")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OKR {
  id            Int         @id @default(autoincrement())
  title         String
  description   String
  progress      Float       @default(0)
  status        String      @default("active")
  startDate     DateTime
  endDate       DateTime
  team          Team        @relation(fields: [teamId], references: [id])
  teamId        Int
  assignedUser  User?       @relation("AssignedOKRs", fields: [assignedUserId], references: [id])
  assignedUserId Int?
  keyResults    KeyResult[]
  createdBy     Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model KeyResult {
  id          Int      @id @default(autoincrement())
  okr         OKR      @relation(fields: [okrId], references: [id])
  okrId       Int
  title       String
  targetValue Float
  currentValue Float   @default(0)
  status      String   @default("active")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
